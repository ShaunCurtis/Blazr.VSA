@namespace Blazr.App.UI

@inject InvoiceAggregatePresenter Presenter

<div class="d-flex flex-row mb-1 pt-1 border-bottom">
    <div class="flex-fill justify-content-start h4">
        Invoice Items
    </div>
    <div class="justify-content-end">
        <button class="btn btn-sm btn-primary" @onclick="() => OnAddAsync()">Add New Invoice Item</button>
    </div>
</div>

<div class="@this.GridCss" tabindex="-1">
    <QuickGrid Theme="None" TGridItem="DmoInvoiceItem" ItemsProvider="this.GetItemsAsync" Class="@this.TableCss">
        <SortedPropertyColumn SortField="@AppDictionary.InvoiceItem.InvoiceItemID" Class="nowrap-column" Sortable="true" Title="ID">
            @context.Id.Value.ToDisplayId()
        </SortedPropertyColumn>
        <SortedPropertyColumn SortField="@AppDictionary.InvoiceItem.Description" Class="nowrap-column" Sortable="true" Title="Description">
            @context.Description
        </SortedPropertyColumn>
        <SortedPropertyColumn SortField="@AppDictionary.InvoiceItem.Amount" Class="nowrap-column" Sortable="true" Title="Amount">
            @context.Amount.AsMoney()
        </SortedPropertyColumn>
        <TemplateColumn Class="" Align="Align.End">
            <UIButtonGroup>
                <button class="btn btn-sm btn-primary" @onclick="() => OnEditAsync(context.Id)">Edit</button>
            </UIButtonGroup>
        </TemplateColumn>
    </QuickGrid>
</div>

<BsModalDialog @ref=_modalDialog />

@code {
    private string TableCss = "table table-sm table-striped table-hover border-bottom no-margin hide-blank-rows";
    private string GridCss = "grid";
    private IModalDialog _modalDialog = default!;

    protected override void OnInitialized()
    {
    }

    public ValueTask<GridItemsProviderResult<DmoInvoiceItem>> GetItemsAsync(GridItemsProviderRequest<DmoInvoiceItem> gridRequest)
    {
        var list = this.Presenter.Invoice.InvoiceItems.Select(item => item.Record).ToList();

        return ValueTask.FromResult(GridItemsProviderResult.From<DmoInvoiceItem>(list, list.Count));
    }

    private async Task OnEditAsync(InvoiceItemId id)
    {
        var options = new ModalOptions();
        options.ControlParameters.Add("Uid", id);

        await _modalDialog.ShowAsync(typeof(InvoiceItemEditForm), options);
    }

    private async Task OnAddAsync()
    {
        var options = new ModalOptions();
        options.ControlParameters.Add("Uid", InvoiceItemId.Default);

        await _modalDialog.ShowAsync(typeof(InvoiceItemEditForm), options);
    }
}
